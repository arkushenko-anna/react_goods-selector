{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","deleteGood","setState","chooseGood","good","this","className","type","onClick","map","isSelectedGood","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,WACX,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEF,aAAcI,KAVlC,4CAaE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UAEIN,EAEI,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,eACR,aAAW,eACXO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,gBAIlB,oBAAIK,UAAU,QAAd,+BAGN,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAL,GACT,IAAMM,EAAiBN,IAASJ,EAEhC,OACE,qBACE,UAAQ,OAERM,UAAWK,IACT,CAAE,+BAAgCD,IAJtC,UAQGA,EAEG,6BACE,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKP,WAJhB,iBAWF,6BACE,wBACE,UAAQ,YACRM,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKL,WAAWC,IALpB,iBAaN,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MAnCEA,iBA5CvB,GAAyBQ,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dda91f78.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  deleteGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  chooseGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {\n          selectedGood\n            ? (\n              <h1 className=\"title is-flex is-align-items-center\">\n                {`${selectedGood} is selected`}\n\n                <button\n                  data-cy=\"RemoveButton\"\n                  aria-label=\"Delete goods\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.deleteGood}\n                />\n              </h1>\n            )\n            : <h1 className=\"title\">No goods selected</h1>\n        }\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelectedGood = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    { 'has-background-success-light': isSelectedGood },\n                  )}\n                >\n\n                  {isSelectedGood\n                    ? (\n                      <td>\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.deleteGood}\n                        >\n                          -\n                        </button>\n                      </td>\n                    )\n                    : (\n                      <td>\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => {\n                            this.chooseGood(good);\n                          }}\n                        >\n                          +\n                        </button>\n                      </td>\n                    )}\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}